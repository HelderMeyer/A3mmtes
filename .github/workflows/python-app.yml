name: Python application

on:
  push:
    branches: ["main","**"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checar código
      uses: actions/checkout@v4

    - name: Conventional Commit Checker for Pull Requests
      if: github.event_name == 'pull_request'
      uses: agenthunt/conventional-commit-checker-action@v2.0.0

    - name: Conventional Commit Checker for Push Events
      if: github.event_name == 'push'
      run: |
        # Checks the latest commit message for conventional format
        last_commit_message=$(git log -1 --pretty=%B)
        echo "Last commit message: $last_commit_message"
        # Define a regex for conventional commits
        regex="^(feat|fix|docs|style|refactor|perf|test|chore)(\(.+\))?: .+$"
        if [[ ! $last_commit_message =~ $regex ]]; then
          echo "Commit message does not follow Conventional Commits format."
          exit 1
        fi

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Rodar testes
      run: |
        python -m unittest discover

    - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: v7
          release_name: Release v7
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

